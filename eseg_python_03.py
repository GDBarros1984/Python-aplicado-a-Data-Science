# -*- coding: utf-8 -*-
"""eseg_python_03.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/gist/GDBarros1984/90859ac8ca924a15be8e60a4d1a844e2/eseg_python_03.ipynb
"""

import math

print("Esse programa irá calcular o custo de uma barra")

print("Essa etapa irá calcular o diâmetro da barra em função de uma força")

print("Essa etapa irá calcular a tensão de trabalho em (MPa)")

Tensao_de_escoamento = float(input("Digite a tensão de escoamento em (MPa)"))

Fator_de_segurança = float(input("Digite o fator de segurança"))

Tensao_de_trabalho = Tensao_de_escoamento / Fator_de_segurança

print("A tensão de trabalho é ", Tensao_de_trabalho, "em MPa")

print("Essa etapa irá calcular o diâmetro em função de uma força")

Força = float(input("Digite a força em N"))

Numero_de_barra = float(input("Digite o número de barra"))

Força_por_n_de_barra = Força / Numero_de_barra

Tensão_de_trabalho_em_N_m2 = Tensao_de_trabalho *10 **6

Diâmetro_m = (math.sqrt(Força_por_n_de_barra/(Tensão_de_trabalho_em_N_m2*math.pi))) * 2

Diâmetro_cm = ((math.sqrt(Força_por_n_de_barra/(Tensão_de_trabalho_em_N_m2*math.pi))) * 2) *100

Diâmetro_mm = ((math.sqrt(Força_por_n_de_barra/(Tensão_de_trabalho_em_N_m2*math.pi))) * 2) *1000

print("O diâmetro da barra é", Diâmetro_m, "em m")

print("O diâmetro da barra é", Diâmetro_cm, "em cm")

print("O diâmetro da barra é", Diâmetro_mm, "em mm")

# Até esse ponto o programa calculou a questão a. #

print("Essa etapa irá calcular a massa da barra")

print("Essa etapa irá calcular o volume da barra")

altura_da_barra = float(input("Digite a altura da barra em cm"))

Volume_da_barra = ((math.pi*((Diâmetro_cm/2)**2))) * Altura_da_barra

print("O volume da barra é", Volume_da_barra, "cm³")

Densidade = float(input("Digite a densidade em g/cm³")

print("A densidade da barra é: ", Densidade, "g/cm³")

massa_da_barra = Densidade * Volume_da_barra

massa_da_barra_kg = (Densidade * Volume_da_barra)/1000

print("A massa da barra é: ", massa_da_barra, "g")

print("A massa da barra é: ", massa_da_barra_kg, "kg")

# Até esse ponto o programa calculou a questão b.

custo_por_quilo = float(input("Digite o custo da barra em R$/kg: "))

custo_da_barra_por_quilo = round(massa_da_barra_kg * custo_por_quilo, 2)

print("O custo da barra é: ", custo_da_barra_por_quilo, "R$")

# Até essa etapa o programa calculou o custo total da barra (c).

# Heat map projeto.mapa_calor()

import numpy as np
import matplotlib
import matplotlib.pyplot as plt

# sphinx_gallery_thumbnail_number = 2

# def mapa_calor():

Materiais = ["Epóxi e fibra de Aramida", "Epóxi e fibra de carbono", "Epóxi e fibra de vidro", "Aço inox 304",
              "Aço 1045", "PA 6,6", "Epóxi"]
Fator_de_segurança = ["2,0", "2,5", "3,0.",
          "3,5", "4,0", "4,5", "5,0"]

grafico = np.array([[25.03, 31.29, 37.55, 43.8, 50.06, 56.32, 61.03],
                    [24.51, 30.64, 36.77, 42.89, 49.02, 55.15, 61.28],
                    [30.13, 37.67, 45.2, 52.73, 60.27, 67.8, 75.33],
                    [0.6, 0.0, 0.3, 0.0, 3.1, 0.0, 0.0],
                    [0.7, 1.7, 0.6, 2.6, 2.2, 6.2, 124.55],
                    [1.3, 1.2, 0.0, 0.0, 0.0, 3.2, 5.1],
                    [0.1, 2.0, 0.0, 1.4, 0.0, 1.9, custo_da_barra_por_quilo]])


fig, ax = plt.subplots()
im = ax.imshow(grafico)

# É necessário identificar os eixos do mapa de calor

ax.set_xticks(np.arange(len(Fator_de_segurança)))
ax.set_yticks(np.arange(len(Materiais)))

# Nomear os eixos com o rótulos

ax.set_xticklabels(Fator_de_segurança)
ax.set_yticklabels(Materiais)

# Rotacionar os eixos e determinar os seus alinhamentos

plt.setp(ax.get_xticklabels(), rotation=45, ha="right", rotation_mode = "anchor")

# Recursividade dos dados e informações dos dados

for i in range(len(Materiais)):
  for j in range(len(Fator_de_segurança)):
    text = ax.text(j, i, grafico[i, j],
                  ha="center", va="center", color="w")

ax.set_title("Preço das barras em função do fator de segurança")
fig.tight_layout()
plt.show()